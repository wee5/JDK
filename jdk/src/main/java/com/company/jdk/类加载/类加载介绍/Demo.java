package com.company.jdk.类加载.类加载介绍;

/*
* 类加载介绍
*
* 类加载过程
*   加载：通过类加载器将Class文件（二进制文件）加载到jvm中
*   连接
*       验证：验证Class文件，主要为安全考虑
*       准备：为静态属性分配内存并赋值为默认值
*       解析：将符号引用解析为直接引用
*   初始化：为静态变量赋值正确的值，执行静态代码块
*   使用
*   卸载
*
* 类加载时机
*   初始化时机（主动引用；该过程包含了类加载）
*       使用new实例化对象时，读取和设置类的静态变量、静态非字面值常量（静态字面值常量除外）时，调用静态方法时
*       对内进行反射调用时
*       当初始化一个类时，如果父类没有进行初始化，需要先初始化父类
*       启动程序所使用的main方法所在类
*       当使用1.7的动态语音支持时
*   被动引用
*       通过子类引用父类的静态字段，只会触发父类的初始化，而不会触发子类的初始化
*       定义对象数组和集合，不会触发该类的初始化
*       类A引用类B的static final常量不会导致类B初始化（注意静态常量必须是字面值常量，否则还是会触发B的初始化）
* 其他
*   解析可能在初始化之后开始，因为java支持运行时绑定
* */
public class Demo {
}
